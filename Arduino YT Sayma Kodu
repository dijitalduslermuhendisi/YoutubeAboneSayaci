#include<Wire.h>
#include<LiquidCrystal_I2C.h>

#define I2C_ADDR 0x27
#define LCD_COLUMNS 16
#define LCD_ROWS 2
#define BUZZER_PIN 2

LiquidCrystal_I2C lcd(I2C_ADDR, LCD_COLUMNS, LCD_ROWS);

int previous_sub_count = 0;
bool isCelebrating = false;
void setup() {
 Serial.begin(9600);
 lcd.init();
 lcd.backlight();
 lcd.setCursor(0, 0);
 lcd.print("Youtube Abone");
 lcd.setCursor(0, 1);
 lcd.print("             ");
 pinMode(BUZZER_PIN, OUTPUT);
 
}

void loop() {
 if (Serial.available()>0){
   String subscriber_count = Serial.readString();

   if(!isCelebrating) {
     lcd.clear();
     lcd.setCursor(0, 0);
     lcd.print("Youtuber Abone");
     lcd.setCursor(0, 1);
     lcd.print("Abone:  " + subscriber_count);
     
    }
    int sub_count = subscriber_count.toInt();

    if (isCelebrating && (sub_count == 105 || sub_count == 1000 || sub_count == 10000 || sub_count == 100000 || sub_count == 1000000)){
       congratulations(sub_count);
       isCelebrating = true;
       unsigned long startTime = millis();
       while (millis() - startTime < 15000){
         playChampions();
        }
        lcd.clear();
        lcd.setCursor(0, 0);
        lcd.print("Youtube Abone");
        lcd.setCursor(0, 1);
        lcd.print("Abone: " + subscriber_count);
        previous_sub_count = sub_count;
        isCelebrating = false;
        
      }  
  }
}

void congratulations(int sub_count){
   lcd.clear();
   lcd.setCursor(0, 0);
   lcd.print("Tebrikler!  " + String(sub_count));
   lcd.setCursor(0, 1);
   lcd.print("ABONE OLDUNUZ!");
  }
void playChampions(){
   tone(BUZZER_PIN, 659, 250);
   delay(250);
   tone(BUZZER_PIN, 659, 250);
   delay(250);
   tone(BUZZER_PIN, 659, 250);
   delay(250);
   tone(BUZZER_PIN, 783, 250);
   delay(250);
   tone(BUZZER_PIN, 659, 250);
   delay(250);
   tone(BUZZER_PIN, 587, 250);
   delay(250);
   tone(BUZZER_PIN, 523, 250);
   delay(250);
   tone(BUZZER_PIN, 587, 250);
   delay(250);
   noTone(BUZZER_PIN);
  }   
